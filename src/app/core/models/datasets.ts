/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier associated with the data set.
 */
export type Id = string;
/**
 * A description of why and how this data set was chosen.
 */
export type Description = string;
/**
 * The full name of the author.
 */
export type Name = string;
/**
 * The author's email address.
 */
export type Email = string;
/**
 * The author's host institute.
 */
export type Institute = string;
/**
 * The authors who prepared the data set.
 */
export type Authors = Author[];
/**
 * The unique id assigned to this entry
 */
export type Id1 = number;
/**
 * The type of property that this value corresponds to. This should correspond to an `openff.evaluator.properties` property class name.
 */
export type PropertyType = string;
/**
 * The temperature (K) at which this value was measured.
 */
export type Temperature = number;
/**
 * The pressure (kPa) at which this value was measured.
 */
export type Pressure = number;
/**
 * The phase that the property was measured in.
 */
export type Phase = string;
/**
 * The value in the default unit for the property.
 */
export type Value = number;
/**
 * The std error in the default unit for the property.
 */
export type StdError = number;
/**
 * The DOI which encodes the source of the measurement.
 */
export type Doi = string;
/**
 * The components in the systems for which the measurement was made.
 */
export type Components = [Component, ...Component[]];
/**
 * The smiles representation of the component.
 */
export type Smiles = string;
/**
 * The mole fraction of this component.
 */
export type MoleFraction = number;
/**
 * The exact amount of this component.
 */
export type ExactAmount = number;
/**
 * The role of this component in the system (e.g solvent, solute, ligand, etc.)
 */
export type Role = string;
/**
 * The entries in the data set.
 */
export type Entries = DataSetEntry[];
/**
 * A collection of data sets.
 */
export type DataSets = DataSet[];

export interface DataSetCollection {
  data_sets?: DataSets;
  [k: string]: unknown;
}
export interface DataSet {
  id: Id;
  description: Description;
  authors: Authors;
  entries: Entries;
  [k: string]: unknown;
}
/**
 * A representation an author. This may be the author of a project
 * or a data set for example.
 */
export interface Author {
  name: Name;
  email: Email;
  institute: Institute;
  [k: string]: unknown;
}
export interface DataSetEntry {
  id?: Id1;
  property_type: PropertyType;
  temperature: Temperature;
  pressure: Pressure;
  phase?: Phase;
  value: Value;
  std_error: StdError;
  doi: Doi;
  components: Components;
  [k: string]: unknown;
}
export interface Component {
  smiles: Smiles;
  mole_fraction: MoleFraction;
  exact_amount?: ExactAmount;
  role?: Role;
  [k: string]: unknown;
}
