/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique id assigned to the project. This must be a valid file name and url fragment.
 */
export type Identifier = string;
/**
 * The title of the project.
 */
export type Title = string;
/**
 * The project's abstract.
 */
export type Abstract = string;
/**
 * The full name of the author.
 */
export type Name = string;
/**
 * The author's email address.
 */
export type Email = string;
/**
 * The author's host institute.
 */
export type Institute = string;
/**
 * The authors of the project.
 */
export type Authors = Author[];
/**
 * The unique id assigned to the study. This must be a valid file name and url fragment.
 */
export type IdentifierType = string;
/**
 * The title of the study.
 */
export type TitleType = string;
/**
 * A description of this study.
 */
export type Description = string;
/**
 * The unique id assigned to the optimization. This must be a valid file name.
 */
export type Identifier2 = string;
/**
 * The title of the optimization.
 */
export type Title2 = string;
/**
 * A description of this optimization.
 */
export type DescriptionType = string;
/**
 * A description of target composition of the optimization training set.
 */
export type TargetTrainingSet = TargetDataSet;
/**
 * The type of property being targeted.
 */
export type PropertyType = string;
/**
 * The number of components that the property should have been collected for (e.g. a pure or binary system)
 */
export type NComponents = number;
/**
 * The temperature of the state (K).
 */
export type Temperature = number;
/**
 * The pressure of the state (kPa).
 */
export type Pressure = number;
/**
 * The composition of the state.
 */
export type MoleFractions = number[];
/**
 * The target states to include in the data set for this class of property.
 */
export type TargetStates = StatePoint[];
/**
 * The types of properties incorporated into this data set.
 */
export type TargetProperties = TargetProperty[];
/**
 * The chemical environments incorporated into this data set.
 */
export type ChemicalEnvironments = (
  | 'Alkane'
  | 'Cation'
  | 'Anion'
  | 'Carbonyl'
  | 'Aldehyde'
  | 'Ketone'
  | 'Thiocarbonyl'
  | 'Thioaldehyde'
  | 'Thioketone'
  | 'Imine'
  | 'Hydrazone'
  | 'Semicarbazone'
  | 'Thiosemicarbazone'
  | 'Oxime'
  | 'Oxime Ether'
  | 'Ketene'
  | 'Ketene Acetal Derivative'
  | 'Carbonyl Hydrate'
  | 'Hemiacetal'
  | 'Acetal'
  | 'Hemiaminal'
  | 'Aminal'
  | 'Thiohemiaminal'
  | 'Thioacetal'
  | 'Enamine'
  | 'Enol'
  | 'Enolether'
  | 'Hydroxy'
  | 'Alcohol'
  | 'Primary Alcohol'
  | 'Secondary Alcohol'
  | 'Tertiary Alcohol'
  | '1,2 Diol'
  | '1,2 Aminoalcohol'
  | 'Phenol'
  | '1,2 Diphenol'
  | 'Enediol'
  | 'Ether'
  | 'Dialkylether'
  | 'Alkylarylether'
  | 'Diarylether'
  | 'Thioether'
  | 'Disulfide'
  | 'Peroxide'
  | 'Hydroperoxide'
  | 'Hydrazine'
  | 'Hydroxylamine'
  | 'Amine'
  | 'Primary Amine'
  | 'Primary Aliphatic Amine'
  | 'Primary Aromatic Amine'
  | 'Secondary Amine'
  | 'Secondary Aliphatic Amine'
  | 'Secondary Mixed Amine'
  | 'Secondary Aromatic Amine'
  | 'Tertiary Amine'
  | 'Tertiary Aliphatic Amine'
  | 'Tertiary Mixed Amine'
  | 'Tertiary Aromatic Amine'
  | 'Quart Ammonium'
  | 'NOxide'
  | 'Halogen Derivative'
  | 'Alkyl Halide'
  | 'Alkyl Fluoride'
  | 'Alkyl Chloride'
  | 'Alkyl Bromide'
  | 'Alkyl Iodide'
  | 'Aryl Halide'
  | 'Aryl Fluoride'
  | 'Aryl Chloride'
  | 'Aryl Bromide'
  | 'Aryl Iodide'
  | 'Organometallic'
  | 'Organolithium'
  | 'Organomagnesium'
  | 'Carboxylic Acid Derivative'
  | 'Carboxylic Acid'
  | 'Carboxylic Acid Salt'
  | 'Carboxylic Acid Ester'
  | 'Lactone'
  | 'Carboxylic Acid Amide'
  | 'Carboxylic Acid Primary Amide'
  | 'Carboxylic Acid Secondary Amide'
  | 'Carboxylic Acid Tertiary Amide'
  | 'Lactam'
  | 'Carboxylic Acid Hydrazide'
  | 'Carboxylic Acid Azide'
  | 'Hydroxamic Acid'
  | 'Carboxylic Acid Amidine'
  | 'Carboxylic Acid Amidrazone'
  | 'Nitrile'
  | 'Acyl Halide'
  | 'Acyl Fluoride'
  | 'Acyl Chloride'
  | 'Acyl Bromide'
  | 'Acyl Iodide'
  | 'Acyl Cyanide'
  | 'Imido Ester'
  | 'Imidoyl Halide'
  | 'Thiocarboxylic Acid Derivative'
  | 'Thiocarboxylic Acid'
  | 'Thiocarboxylic Acid Ester'
  | 'Thiolactone'
  | 'Thiocarboxylic Acid Amide'
  | 'Thiolactam'
  | 'Imido Thioester'
  | 'Oxohetarene'
  | 'Thioxohetarene'
  | 'Iminohetarene'
  | 'Orthocarboxylic Acid Derivative'
  | 'Carboxylic Acid Orthoester'
  | 'Carboxylic Acid Amide Acetal'
  | 'Carboxylic Acid Anhydride'
  | 'Carboxylic Acid Imide'
  | 'Carboxylic Acid Unsubst Imide'
  | 'Carboxylic Acid Subst Imide'
  | 'CO2 Derivative'
  | 'Carbonic Acid Derivative'
  | 'Carbonic Acid Monoester'
  | 'Carbonic Acid Diester'
  | 'Carbonic Acid Ester Halide'
  | 'Thiocarbonic Acid Derivative'
  | 'Thiocarbonic Acid Monoester'
  | 'Thiocarbonic Acid Diester'
  | 'Thiocarbonic Acid Ester Halide'
  | 'Carbamic Acid Derivative'
  | 'Carbamic Acid'
  | 'Carbamic Acid Ester'
  | 'Carbamic Acid Halide'
  | 'Thiocarbamic Acid Derivative'
  | 'Thiocarbamic Acid'
  | 'Thiocarbamic Acid Ester'
  | 'Thiocarbamic Acid Halide'
  | 'Urea'
  | 'Isourea'
  | 'Thiourea'
  | 'Isothiourea'
  | 'Guanidine'
  | 'Semicarbazide'
  | 'Thiosemicarbazide'
  | 'Azide'
  | 'Azo Compound'
  | 'Diazonium Salt'
  | 'Isonitrile'
  | 'Cyanate'
  | 'Isocyanate'
  | 'Thiocyanate'
  | 'Isothiocyanate'
  | 'Carbodiimide'
  | 'Nitroso Compound'
  | 'Nitro Compound'
  | 'Nitrite'
  | 'Nitrate'
  | 'Sulfuric Acid Derivative'
  | 'Sulfuric Acid'
  | 'Sulfuric Acid Monoester'
  | 'Sulfuric Acid Diester'
  | 'Sulfuric Acid Amide Ester'
  | 'Sulfuric Acid Amide'
  | 'Sulfuric Acid Diamide'
  | 'Sulfuryl Halide'
  | 'Sulfonic Acid Derivative'
  | 'Sulfonic Acid'
  | 'Sulfonic Acid Ester'
  | 'Sulfonamide'
  | 'Sulfonyl Halide'
  | 'Sulfone'
  | 'Sulfoxide'
  | 'Sulfinic Acid Derivative'
  | 'Sulfinic Acid'
  | 'Sulfinic Acid Ester'
  | 'Sulfinic Acid Halide'
  | 'Sulfinic Acid Amide'
  | 'Sulfenic Acid Derivative'
  | 'Sulfenic Acid'
  | 'Sulfenic Acid Ester'
  | 'Sulfenic Acid Halide'
  | 'Sulfenic Acid Amide'
  | 'Thiol'
  | 'Alkylthiol'
  | 'Arylthiol'
  | 'Phosphoric Acid Derivative'
  | 'Phosphoric Acid'
  | 'Phosphoric Acid Ester'
  | 'Phosphoric Acid Halide'
  | 'Phosphoric Acid Amide'
  | 'Thiophosphoric Acid Derivative'
  | 'Thiophosphoric Acid'
  | 'Thiophosphoric Acid Ester'
  | 'Thiophosphoric Acid Halide'
  | 'Thiophosphoric Acid Amide'
  | 'Phosphonic Acid Derivative'
  | 'Phosphonic Acid'
  | 'Phosphonic Acid Ester'
  | 'Phosphine'
  | 'Phosphinoxide'
  | 'Boronic Acid Derivative'
  | 'Boronic Acid'
  | 'Boronic Acid Ester'
  | 'Alkene'
  | 'Alkyne'
  | 'Aromaticatic'
  | 'Heterocycle'
  | 'Alpha Aminoacid'
  | 'Alpha Hydroxyacid'
)[];
/**
 * The type of the parameter handler associated with this parameter.
 */
export type HandlerType = string;
/**
 * The smirks identifier of the parameter.
 */
export type Smirks = string;
/**
 * The attribute name associated with the parameter.
 */
export type AttributeName = string;
/**
 * The force field parameters to be optimized.
 */
export type ParametersToTrain = SmirnoffParameter[];
/**
 * The optimizations to perform as part of this study.
 */
export type Optimizations = Optimization[];
/**
 * The inputs to provide to ForceBalance.
 */
export type OptimizationInputs = ForceBalanceOptions;
/**
 * The maximum number of optimization iterations to perform.
 */
export type MaxIterations = number;
/**
 * The convergence criterion of the step size.
 */
export type ConvergenceStepCriteria = number;
/**
 * The convergence criterion of the objective function.
 */
export type ConvergenceObjectiveCriteria = number;
/**
 * The convergence criterion of the gradient norm.
 */
export type ConvergenceGradientCriteria = number;
/**
 * The number of convergence criteria that must be met for the optimizer to be declared converged.
 */
export type NCriteria = number;
/**
 * The name of the fitting target.
 */
export type TargetName = string;
/**
 * A description of target composition of the benchmarking test set.
 */
export type TargetTestSet = TargetDataSet;
/**
 * The file name of the force field which will be used as the starting point for all optimizations. Currently this must be the name of a force field in the `openforcefields` GitHub repository.
 */
export type InitialForceField = string;
/**
 * The studies conducted as part of the project.
 */
export type Studies = Study[];
/**
 * A collection of projects.
 */
export type Projects = Project[];

export interface ProjectCollection {
  projects?: Projects;
}
export interface Project {
  identifier: Identifier;
  title: Title;
  abstract: Abstract;
  authors: Authors;
  studies: Studies;
}
export interface Author {
  name: Name;
  email: Email;
  institute: Institute;
}
export interface Study {
  identifier: IdentifierType;
  title: TitleType;
  description: Description;
  optimizations: Optimizations;
  optimization_inputs?: OptimizationInputs;
  target_test_set: TargetTestSet;
  initial_force_field: InitialForceField;
}
export interface Optimization {
  identifier: Identifier2;
  title: Title2;
  description: DescriptionType;
  target_training_set: TargetTrainingSet;
  parameters_to_train: ParametersToTrain;
}
export interface TargetDataSet {
  target_properties: TargetProperties;
  chemical_environments: ChemicalEnvironments;
}
export interface TargetProperty {
  property_type: PropertyType;
  n_components?: NComponents;
  target_states: TargetStates;
}
export interface StatePoint {
  temperature: Temperature;
  pressure: Pressure;
  mole_fractions: MoleFractions;
}
export interface SmirnoffParameter {
  handler_type: HandlerType;
  smirks: Smirks;
  attribute_name: AttributeName;
}
export interface ForceBalanceOptions {
  max_iterations?: MaxIterations;
  convergence_step_criteria?: ConvergenceStepCriteria;
  convergence_objective_criteria?: ConvergenceObjectiveCriteria;
  convergence_gradient_criteria?: ConvergenceGradientCriteria;
  n_criteria?: NCriteria;
  target_name?: TargetName;
}
